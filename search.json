[{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Balamuta. Author, maintainer.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2024). demorwasmbinary: webR Demo Generating WASM R Package Binaries. R package version 0.0.1, https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/, https://github.com/coatless-tutorials/webr-github-action-wasm-binaries.","code":"@Manual{,   title = {demorwasmbinary: webR Demo for Generating WASM R Package Binaries},   author = {James Balamuta},   year = {2024},   note = {R package version 0.0.1, https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/},   url = {https://github.com/coatless-tutorials/webr-github-action-wasm-binaries}, }"},{"path":[]},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"webR Demo for Generating WASM R Package Binaries","text":"Welcome tutorial automating separate build processes compiling R package webR creating pkgdown website using GitHub Actions. guide, find sample GitHub Action workflows designed generate developmental webR/R WASM Package binaries alongside pkgdown website. ’re eager streamline process building deploying R packages webR also creating pkgdown website, ’ve come right place. repository part series exploring three different approaches: repository serves example implementation webR Project’s Build R packages using GitHub Actions documentation. focuses creating organizational webR/WASM Package Repository without inclusion pkgdown website meant triggered workflow dispatches changes packages file. Explore repository insights structuring organization-centric webR package repository using GitHub Actions. repository introduces unified approach GitHub Action deployment using artifacts. Unlike previous strategy, allows simultaneous deployment R WASM binaries associated pkgdown website using artifacts. approach helps prevent continuous increase repository size. Explore repository understand use artifacts can streamline deployment process maintaining clean efficient version control history. repository adopts workflow approach familiar R package developers using usethis. employs separate GitHub Actions generating R WASM package binaries pkgdown website. key aspect approach merging deployment outputs gh-pages branch. strategy enhances clarity tracking file changes provides transparent view deployed content. Explore repository understand approach can streamline R package deployment workflow.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"key-contents","dir":"","previous_headings":"","what":"Key Contents","title":"webR Demo for Generating WASM R Package Binaries","text":"’s quick summary can find repository: .github/workflows/deploy-cran-repo.yml: heavily modified version r-wasm/actions’ deploy-cran-repo.yml, leveraging r-wasm/actions/build-rwasm action create R WASM packages JamesIves/github-pages-deploy-action deploy packages onto GitHub Pages branch. .github/workflows/pkgdown.yml: Standard pkgdown GitHub Action r-lib/actions/examples/pkgdown.yaml. _pkgdown.yml: Usual configuration pkgdown website. DESCRIPTION: Contains usual meta data information R package. R/-webr.R: script designed check R package run inside webR environment.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"deployment-strategy","dir":"","previous_headings":"","what":"Deployment Strategy","title":"webR Demo for Generating WASM R Package Binaries","text":"deployment strategy repository involves pushing built R WASM Packages associated pkgdown website directly gh-pages branch. can view pushed webR package binary parts looking gh-pages branch repository. Specifically, can see binary package data bin/emscripten/contrib/4.3 package information src/contrib. files form basis pkgdown website. can learn package repositories CRAN-like R Administration: 6.6 Setting package repository. ’s essential note potential drawback approach gradual increase repository size commit. expansion occurs webR binary package, along dependencies, stored gh-pages branch. positive side, utilizing version control tools allows clear visibility changes deployments.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"webR Demo for Generating WASM R Package Binaries","text":"setup, ’re going aim use {usethis} R package enable GitHub Pages retrieve workflow building R WASM packages.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"setup-github-pages-on-the-repository","dir":"","previous_headings":"Setup","what":"Setup Github Pages on the Repository","title":"webR Demo for Generating WASM R Package Binaries","text":"can enable GitHub pages directly usethis : Another option directly enabling GitHub Pages repository following: Click Settings tab repository “Code automation”, select Pages menu item. “Source” option select Deploy branch drop . “Branch” option, select gh-pages branch deploy directory / (root) press Save. “Custom Domain” settings, make sure Enforce HTTPS checked. Example configuration GitHub Pages","code":"if(!requireNamespace(\"usethis\", quietly = TRUE)) {   install.packages(\"usethis\") }  # Ensure GitHub Pages is set up usethis::use_github_pages()"},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"setup-the-r-wasm-package-build-github-action","dir":"","previous_headings":"Setup","what":"Setup the R WASM Package Build GitHub Action","title":"webR Demo for Generating WASM R Package Binaries","text":"Next, obtain copy modified GitHub Action workflow compiles R WASM package binaries deploys onto GitHub Pages committing gh-pages branch following R code: , can re-create usethis using: ’s ! Binaries now automatically built upon new commit published repository’s website served GitHub Pages.","code":"# Obtain the modified version of the rwasm repo setup usethis::use_github_action(   \"https://github.com/coatless-tutorials/webr-github-action-wasm-binaries/blob/main/.github/workflows/deploy-cran-repo.yml\" ) # Create the GitHub workflows directory if not present dir.create(\".github/workflows\", showWarnings = FALSE, recursive = TRUE)  # Download the GitHub Action workflow into the repository download.file(   url = \"https://github.com/coatless-tutorials/webr-github-action-wasm-binaries/blob/main/.github/workflows/deploy-cran-repo.yml\",   destfile = \".github/workflows/deploy-cran-repo.yml\" )  # Block R build from including the GitHub folder writeLines(   text = \"^\\.github$\",    con = file(\".Rbuildignore\", \"a\")  )"},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"accessing-binaries","dir":"","previous_headings":"","what":"Accessing Binaries","title":"webR Demo for Generating WASM R Package Binaries","text":"webR session, access built binaries using repository’s GitHub Pages URL, example: can set either using options() specifying location webr::install() call. define location webR search options(): Alternatively, repos can specified time: [!IMPORTANT] Ensure repository’s GitHub Pages website available HTTPS (HTTP). Verify option repository’s Settings page Code automation > Pages > Enforce HTTPS. Otherwise, might encounter error:","code":"https://gh-username.github.io/repo-name ## Run once at the start of the session  # Specify where to search for the R WASM packages list_of_repos = c(     \"https://gh-username.github.io/repo-name\",      \"https://other-gh-username.github.io/another-repo\",      \"https://username.r-universe.dev\",      \"https://repo.r-wasm.org/\"   )  # Set the repository URLs options(   repos = list_of_repos,   webr_pkg_repos = list_of_repos )  # Install the R WASM Package webr::install(\"pkgname\") webr::install(\"pkgname\", repos = \"https://gh-username.github.io/repo-name\")  webr::install(\"pkgname\", repos = list_of_repos) Warning: unable to access index for repository http://gh-username.github.io/repo-name/bin/emscripten/contrib/4.3"},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/index.html","id":"verify","dir":"","previous_headings":"","what":"Verify","title":"webR Demo for Generating WASM R Package Binaries","text":"Visit webR REPL Editor (pinned v0.2.2) run following: receive: Screenshot webR REPL editor showing download repository outside repo.r-wasm.org R package binary","code":"# Check if package `{demorwasmbinary}` is installed \"demorwasmbinary\" %in% installed.packages()[,\"Package\"]  # Install the binary from a repository webr::install(   \"demorwasmbinary\",    repos = \"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/\" )  # Check if the function works demorwasmbinary::in_webr()  # View help documentation ?demorwasmbinary::in_webr"},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/reference/demorwasmbinary-package.html","id":null,"dir":"Reference","previous_headings":"","what":"demorwasmbinary: webR Demo for Generating WASM R Package Binaries — demorwasmbinary-package","title":"demorwasmbinary: webR Demo for Generating WASM R Package Binaries — demorwasmbinary-package","text":"Package test generating Web Assembly binaries R packages using r-wasm GitHub Actions.","code":""},{"path":[]},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/reference/demorwasmbinary-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"demorwasmbinary: webR Demo for Generating WASM R Package Binaries — demorwasmbinary-package","text":"Maintainer: James Balamuta balamut2@illinois.edu (ORCID)","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/reference/in_webr.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect if the version of R is built using Web Assembly (WASM) — in_webr","title":"Detect if the version of R is built using Web Assembly (WASM) — in_webr","text":"function checks whether compiled version R shows architecture matches \"wasm32\". case, likely using webR access R.","code":""},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/reference/in_webr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect if the version of R is built using Web Assembly (WASM) — in_webr","text":"","code":"in_webr()"},{"path":"https://tutorials.thecoatlessprofessor.com/webr-github-action-wasm-binaries/reference/in_webr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect if the version of R is built using Web Assembly (WASM) — in_webr","text":"","code":"# Check to see if WASM is active in_webr() #> [1] FALSE"}]
